---
import { urlFor } from "../sanity/lib/urlFor";
import { Address } from "./Address";
import { FormattedTimeRange } from "./FormattedTimeRange";
import { FormattedDateRange } from "./FormattedDateRange";
import { Price } from "./Price";
import type { PortableTextBlock } from "sanity";
import { loadQuery } from "../sanity/lib/load-query";

export type Event = {
  name: string;
  poster: {
    asset: {};
  };
  venue: {
    name: string;
    address: {
      address1: string;
      address2: string;
      city: string;
      region: string;
      postalCode: string;
    };
  };
  description: PortableTextBlock;
  startDate: string;
  endDate: string;
  isRecurring: boolean;
  recurrence: {
    frequency: string;
    interval: number;
    endDate: string; // ISO date
  };
};

export type Props = {
  _type: "events";
  _key: string;
  title: string;
  events: number;
};

const { events: noOfEvents = 4, title } = Astro.props;

const { data: events } = await loadQuery({
  query: `*[_type == "event"] | order(startDate desc) [0..${noOfEvents - 1}] {
  ...,
  venue->
  }`,
  params: {},
});
---

<section class="w-full text-left py-24" id="whats-on">
  <div class="max-w-5xl mx-12 lg:mx-auto">
    <h1 class="mb-20">{title}</h1>
    <ul class="grid grid-cols-1 md:grid-cols-2 gap-16 md:gap-12">
      {
        (events as Event[]).map((event) => (
          <div class="group relative">
            <div class="aspect-h-3 aspect-w-4 overflow-hidden rounded-lg bg-gray-100">
              <img
                src={urlFor(event.poster).url()}
                class="object-cover object-center"
              />
            </div>
            <div class="mt-4 flex items-center justify-between space-x-8 text-base font-medium">
              <h3>
                <a href={event.link}>
                  <span aria-hidden="true" class="absolute inset-0" />
                  {event.name}
                </a>
              </h3>
              <p>
                <Price price={event.price} />
              </p>
            </div>
            <p class="text-text text-base font-semibold block">
              <FormattedDateRange
                startDate={event.startDate}
                endDate={event.endDate}
                recurrence={event.recurrence}
              />
            </p>
            <p class="text-text text-base font-semibold block">
              <FormattedTimeRange
                startDate={event.startDate}
                endDate={event.endDate}
              />
            </p>
            <span class="text-text text-base font-semibold block pt-2">
              <Address {...event.venue} />
            </span>
          </div>
        ))
      }
    </ul>
  </div>
</section>
